# ==========================
# ===  General settings  ===
# ==========================
# install tmux 2.5 https://gist.github.com/P7h/91e14096374075f5316e
# install bc, nc and clipboard app
# 
# stole some stuff from https://github.com/samoshkin/tmux-config/blob/af2efd9561f41f30c51c9deeeab9451308c4086b/tmux/tmux.conf
#
# Do the following to enable for remote copy paste in cygwin
# $ cat ~/.minttyrc
# AllowSetSelection=true


set -g default-terminal "screen-256color"
set -g history-limit 20000
set -g buffer-limit 20
set -sg escape-time 0
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 300
setw -g allow-rename off
setw -g automatic-rename off
setw -g aggressive-resize on

# Screen like C-a mapping
## remap prefix to Control + a
set -g prefix C-a
## bind 'C-a C-a' to type 'C-a'
bind C-a send-prefix
unbind C-b

# Bind alt+arrow for pane switching
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Pane switching using mouse tmux < 2.1
#set-option -g mouse-select-pane on
# tmux > 2.1 mouse mode
#  turns on the following
#   - mouse-resize-pane
#   - mouse-select-pane
#   - mouse-select-window
#   - mode-mouse
# set -g mouse on

# https://stackoverflow.com/a/40902312
# Version-specific commands [grumble, grumble]
# See: https://github.com/tmux/tmux/blob/master/CHANGES
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
  "set -g mouse-select-pane on; set -g mode-mouse on; \
    set -g mouse-resize-pane on; set -g mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"

bind -T root F11 \
	if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
		"set -g mouse-select-pane; set -g mode-mouse; \
		  set -g mouse-resize-pane; set -g mouse-select-window; \
		  display 'Mouse: #{?mode-mouse,ON,OFF}'" \;\
	if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
		"set -g mouse; display 'Mouse: #{?mouse,ON,OFF}'" \;\
	if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
		"set -g utf8; set -g status-utf8; set -g mouse-utf8" \; \
		
		 

# -- config edit ----------------------------

# ctrl a + ctrl r to reload config
bind C-r source-file ~/.tmux.conf \; display "Reloaded config!"

bind C-e new-window -n '~/.tmux.conf' "sh -c 'nano ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Reloaded!\"'"


# -- display --------------------------------

# set base index to be 1
set -g base-index 1
setw -g pane-base-index 1

set -g renumber-windows on #renumber windows when closed

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Highlight current window
set-window-option -g window-status-current-bg yellow

set -g status-position top

# -- windows mgmt ----------------------------

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# C-a + z # zoom into current pane
# C-a + M-2 # Rotate window to horizontal split for copy and paste
# C-a + M-1 # Rotate window to back to vertical split
# C-a + o # go to next pane(cycle)
# C-a + ; # go to previous pane
# C-a + { move current pane to previous position
# C-a + } move current pane to next position
# C-a + C-o #rotate window `up` (all pane)
# C-a + M-o #rotate window `down`
# C-a + ! #move current pane into new window
# :move-pane -t :3.2 # split window 3's pane 2 and move current pane there


# --------------------------------------------

# ================================================
# ===     Copy mode, scroll and clipboard      ===
# ================================================
set -g @copy_use_osc52_fallback on

# for OSX
# wrap default shell in reattach-to-user-namespace if available
# there is some hack with `exec & reattach`, credits to "https://github.com/gpakosz/.tmux"
# don't really understand how it works, but at least window are not renamed to "reattach-to-user-namespace"
if -b "command -v reattach-to-user-namespace > /dev/null 2>&1" \
    "run 'tmux set -g default-command \"exec $(tmux show -gv default-shell) 2>/dev/null & reattach-to-user-namespace -l $(tmux show -gv default-shell)\"'"

yank="~/.tmux/yank.sh"

# Remap keys which perform copy to pipe copied text to OS clipboard
bind -T copy-mode M-w send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode C-w send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "$yank"

# iTerm2 works with clipboard out of the box, set-clipboard already set to "external"
# tmux show-options -g -s set-clipboard
# set-clipboard on|external
# set -g set-clipboard on

# =====================================
# ===           Theme               ===
# =====================================

# Feel free to NOT use this variables at all (remove, rename)
# this are named colors, just for convenience
color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015

# This is a theme CONTRACT, you are required to define variables below
# Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"


# ==============================================
# ===   Nesting local and remote sessions     ===
# ==============================================

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file ~/.tmux/tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    display 'Client' \;\
    refresh-client -S \;\
#    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# [fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\


	
	
bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  display 'Host' \;\
  refresh-client -S
